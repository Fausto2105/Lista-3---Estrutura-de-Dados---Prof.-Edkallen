/*
** Função : Implementação do Bubble Sort com contagem de if's e trocas
** Autor : [Seu Nome]
** Data : [Data de hoje]
** Observações: Este programa implementa o algoritmo de ordenação Bubble Sort para ordenar um vetor de inteiros.
**              Ele também conta o número de comparações (if's) e trocas realizadas durante o processo de ordenação.
*/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void bubble_sort(int vetor[], int tamanho, int *num_ifs, int *num_trocas) {
    int i, j;
    *num_ifs = 0;
    *num_trocas = 0;
    for (i = 0; i < tamanho - 1; i++) {
        for (j = 0; j < tamanho - i - 1; j++) {
            (*num_ifs)++;
            if (vetor[j] > vetor[j + 1]) {
                (*num_trocas)++;
                int temp = vetor[j];
                vetor[j] = vetor[j + 1];
                vetor[j + 1] = temp;
            }
        }
    }
}

int main() {
    int tamanho, i;
    printf("Digite o tamanho do vetor: ");
    scanf("%d", &tamanho);

    int vetor[tamanho];
    srand(time(NULL));
    printf("Vetor original: ");
    for (i = 0; i < tamanho; i++) {
        vetor[i] = rand() % 100; 
        printf("%d ", vetor[i]);
    }
    printf("\n");

    int num_ifs, num_trocas;
    bubble_sort(vetor, tamanho, &num_ifs, &num_trocas);

    printf("Vetor ordenado: ");
    for (i = 0; i < tamanho; i++) {
        printf("%d ", vetor[i]);
    }
    printf("\n");

    printf("Número de if's realizados: %d\n", num_ifs);
    printf("Número de trocas realizadas: %d\n", num_trocas);

    return 0;
}
